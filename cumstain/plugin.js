(function(u,f){"use strict";function c(t){return t&&typeof t=="object"&&"default"in t?t:{default:t}}var o=c(u),l=c(f),d=()=>(o.default.unpatchCache=l.default.make(new Map),()=>{o.default.unpatchCache=void 0,delete o.default.unpatchCache});const h=/[^\S\r\n]*?\r?\n[^\S\r\n]*?\*[^\S\r\n]?/,p=/^\\@/;function m(t){try{return JSON.parse(t)}catch{}}function w(t){const e=t.split(`
`)[0];if(e.includes("//META"))return E(t);if(e.includes("/**"))return g(t);throw new Error("META was not found.")}function E(t){const e=t.split(`
`)[0],n=e.substring(e.lastIndexOf("//META")+6,e.lastIndexOf("*//")),a=m(n);if(!a)throw new Error("META could not be parsed.");if(!a.name)throw new Error("META missing name data.");return a}function g(t){const e=t.split("/**",2)[1].split("*/",1)[0],n={};let a="",s="";for(const r of e.split(h))if(r.length!==0)if(r.charAt(0)==="@"&&r.charAt(1)!==" "){n[a]=s;const i=r.indexOf(" ");a=r.substr(1,i-1),s=r.substr(i+1)}else s+=" "+r.replace("\\n",`
`).replace(p,"@");return n[a]=s.trim(),delete n[""],n}var M=async(t,e)=>{const n=await(await fetch(new URL(t,e).href)).text();return{id:`${e}___${t}`,CSS:n,...w(n)}};async function v(t){const e=new URL("repo.json",t).href,n=await(await fetch(e)).json();if(!n.themes||n.themes?.length===0)throw new Error("No themes found in repo");if(!n.meta)throw new Error("No repo metadata");if(!n?.meta.name)throw new Error("Repo did not have a name");return n}var x=async t=>{const e=await v(t),n=await Promise.all(e.themes.map(a=>M(a,t)));return{manifest:e,themes:n}},A=({persist:t})=>{x("http://127.0.0.1:8080/").then(console.log);let e=[];return{onLoad:async()=>{e.push(d())},onUnload:()=>e.forEach(n=>n?.())}};return A})(cumcord.pluginData,cumcord.modules.internal.nests);
