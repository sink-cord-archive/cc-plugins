(function(c,d,y,o,m,n,g){"use strict";function f(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var l=f(c),E=f(y);const b=/[^\S\r\n]*?\r?\n[^\S\r\n]*?\*[^\S\r\n]?/,R=/^\\@/;function S(e){try{return JSON.parse(e)}catch{}}function w(e){const t=e.split(`
`)[0];if(t.includes("//META"))return v(e);if(t.includes("/**"))return k(e);throw new Error("META was not found.")}function v(e){const t=e.split(`
`)[0],a=t.substring(t.lastIndexOf("//META")+6,t.lastIndexOf("*//")),r=S(a);if(!r)throw new Error("META could not be parsed.");if(!r.name)throw new Error("META missing name data.");return r}function k(e){const t=e.split("/**",2)[1].split("*/",1)[0],a={};let r="",s="";for(const i of t.split(b))if(i.length!==0)if(i.charAt(0)==="@"&&i.charAt(1)!==" "){a[r]=s;const u=i.indexOf(" ");r=i.substr(1,u-1),s=i.substr(u+1)}else s+=" "+i.replace("\\n",`
`).replace(R,"@");return a[r]=s.trim(),delete a[""],a}var T=async(e,t)=>{const a=await(await fetch(new URL(e,t).href)).text();return{id:`${t}___${e}`,CSS:a,...w(a)}};async function N(e){const t=new URL("repo.json",e).href,a=await(await fetch(t)).json();if(!a.themes||a.themes?.length===0)throw new Error("No themes found in repo");if(!a.meta)throw new Error("No repo metadata");if(!a?.meta.name)throw new Error("Repo did not have a name");return a}var h=async e=>{const t=await N(e),a=await Promise.all(t.themes.map(r=>T(r,e)));return{manifest:t,themes:a}};function x(e){if(!e?.id||!e.CSS)throw new Error("theme was missing either id or css.");const t=d.injectCSS(e.CSS);l.default.state.ghost.unpatchCache.set(e.id,t)}function p(){l.default.state.ghost.unpatchCache.forEach(e=>e?.()),l.default.state.ghost.unpatchCache.clear()}var M=async()=>{if(!c.persist.ghost.repos||!c.persist.ghost.themes)return p;const e=c.persist.ghost.repos,a=(await Promise.all(e.map(async s=>[s,await h(s)]))).flatMap(([s,i])=>i.themes.map(u=>({...u,repoUrl:s}))),r=c.persist.ghost.themes.filter(s=>s.enabled);return a.filter(s=>r.some(i=>s.id===i.id)).forEach(x),p},C=()=>(l.default.state=E.default.make({unpatchCache:new Map}),()=>{l.default.state=void 0,delete l.default.state});const D=n.React.useState,A=n.React.createElement,F=o.findByDisplayName("FormText"),B=o.findByDisplayName("FormDivider");var L=({items:e})=>{let[t,a]=D(0);return n.React.createElement("div",{className:"ysink_stain_tabbar_root"},n.React.createElement("div",{className:"ysink_stain_tabbar"},e.map((r,s)=>n.React.createElement("button",{className:"ysink_stain_button"+(s===t?" ysink_stain_selected":""),onClick:()=>a(s)},n.React.createElement(F,null,r.text)))),n.React.createElement(B,null),n.React.createElement("div",{className:"ysink_stain_tabbar_content"},A(e[t].component)))};const O=o.findByDisplayName("FormTitle");o.findByDisplayName("FormText");var U=({theme:e})=>n.React.createElement("div",{className:"ysink_stain_themecard"},n.React.createElement(O,{tag:"p",className:"ysink_stain_title"},e.name));const _=n.React.useState,j=n.React.useEffect,I=()=>Promise.all(c.persist.ghost.repos.map(h)),P=e=>e.flatMap(t=>t.themes);async function $(){let e=await I();return{repos:e,themes:P(e)}}var J=()=>{g.useNest(c.persist);let[e,t]=_(void 0),[a,r]=_(void 0);return j(()=>{(!e||!a)&&$().then(({repos:s,themes:i})=>{t(s),r(i)})}),n.React.createElement(m.ErrorBoundary,null,n.React.createElement("div",{className:"ysink_stain_cardcontainer"},(a??[]).map(s=>n.React.createElement(U,{theme:s}))))};const G=o.findByDisplayName("FormTitle"),V=o.findByDisplayName("FormSection");var q=()=>n.React.createElement(m.ErrorBoundary,null,n.React.createElement(V,null,n.React.createElement(G,{tag:"h1"},"Cumstain"),n.React.createElement(L,{items:[{text:"Store",component:J},{text:"Installed",component:()=>n.React.createElement("div",null,"installed")}]}))),z=()=>d.after("getPredicateSections",o.findByDisplayName("SettingsView").prototype,(e,t)=>{if(t[1]?.section!="My Account")return;let a=t.findIndex(r=>r.section=="CUMCORD_PLUGINS")+1;return t.splice(a,0,{section:"ysink_stain_CUMSTAIN",label:"Themes",element:q}),t}),H=()=>cumcord.patcher.injectCSS(".ysink_stain_tabbar{padding:.5rem 1rem;display:grid;grid-auto-flow:column;grid-auto-columns:7rem}.ysink_stain_tabbar .ysink_stain_button *{cursor:pointer}.ysink_stain_tabbar>*{margin-right:1rem;padding:.2rem;border-radius:.3rem;min-width:5rem;text-align:center}.ysink_stain_tabbar>*:last-child{margin-right:0}.theme-dark .ysink_stain_tabbar>*{background:#fff2}.theme-dark .ysink_stain_tabbar>*.ysink_stain_selected{background:#fff4}.theme-light .ysink_stain_tabbar>*{background:#0001}.theme-light .ysink_stain_tabbar>*.ysink_stain_selected{background:#0003}"),K=({persist:e})=>{let t=[];return{onLoad:async()=>{e.store.repos=["http://127.0.0.1:8080/"],t.push(H(),C(),await M(),z())},onUnload:()=>t.reduceRight((a,r)=>r?.(),null)}};return K})(cumcord.pluginData,cumcord.patcher,cumcord.modules.internal.nests,cumcord.modules.webpack,cumcord.ui.components,cumcord.modules.common,cumcord.utils);
