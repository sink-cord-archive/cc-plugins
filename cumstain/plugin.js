(function(c,u,d,h,p){"use strict";function l(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var o=l(c),m=l(d);const w=/[^\S\r\n]*?\r?\n[^\S\r\n]*?\*[^\S\r\n]?/,g=/^\\@/;function S(e){try{return JSON.parse(e)}catch{}}function E(e){const t=e.split(`
`)[0];if(t.includes("//META"))return y(e);if(t.includes("/**"))return M(e);throw new Error("META was not found.")}function y(e){const t=e.split(`
`)[0],n=t.substring(t.lastIndexOf("//META")+6,t.lastIndexOf("*//")),s=S(n);if(!s)throw new Error("META could not be parsed.");if(!s.name)throw new Error("META missing name data.");return s}function M(e){const t=e.split("/**",2)[1].split("*/",1)[0],n={};let s="",a="";for(const r of t.split(w))if(r.length!==0)if(r.charAt(0)==="@"&&r.charAt(1)!==" "){n[s]=a;const i=r.indexOf(" ");s=r.substr(1,i-1),a=r.substr(i+1)}else a+=" "+r.replace("\\n",`
`).replace(g,"@");return n[s]=a.trim(),delete n[""],n}var T=async(e,t)=>{const n=await(await fetch(new URL(e,t).href)).text();return{id:`${t}___${e}`,CSS:n,...E(n)}};async function _(e){const t=new URL("repo.json",e).href,n=await(await fetch(t)).json();if(!n.themes||n.themes?.length===0)throw new Error("No themes found in repo");if(!n.meta)throw new Error("No repo metadata");if(!n?.meta.name)throw new Error("Repo did not have a name");return n}var v=async e=>{const t=await _(e),n=await Promise.all(t.themes.map(s=>T(s,e)));return{manifest:t,themes:n}};function A(e){if(!e?.id||!e.CSS)throw new Error("theme was missing either id or css.");const t=u.injectCSS(e.CSS);o.default.state.ghost.unpatchCache.set(e.id,t)}function f(){o.default.state.ghost.unpatchCache.forEach(e=>e?.()),o.default.state.ghost.unpatchCache.clear()}var R=async()=>{if(!c.persist.ghost.repos||!c.persist.ghost.themes)return f;const e=c.persist.ghost.repos,t=await Promise.all(e.map(async a=>[a,await v(a)])),n=[];t.forEach(([a,r])=>{n.push(...r.themes.map(i=>({...i,repoUrl:a})))});const s=c.persist.ghost.themes.filter(a=>a.enabled);return n.filter(a=>s.some(r=>a.id===r.id)).forEach(A),f},b=()=>(o.default.state=m.default.make({unpatchCache:new Map}),()=>{o.default.state=void 0,delete o.default.state}),x=()=>p.React.createElement("div",{style:{backgroundColor:"red"}},"Test"),C=()=>u.after("getPredicateSections",h.findByDisplayName("SettingsView").prototype,(e,t)=>{if(t[1]?.section!="My Account")return;let n=t.findIndex(s=>s.section=="CUMCORD_PLUGINS")+1;return t.splice(n,0,{section:"ysink_stain_CUMSTAIN",label:"Themes",element:x}),t}),L=({persist:e})=>{let t=[];return{onLoad:async()=>{t.push(C(),b(),await R())},onUnload:()=>t.reduceRight((n,s)=>s?.(),null)}};return L})(cumcord.pluginData,cumcord.patcher,cumcord.modules.internal.nests,cumcord.modules.webpack,cumcord.modules.common);
