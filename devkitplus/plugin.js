(function(a,v,p,U,l,c){"use strict";function k(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var d=k(a);const w=window._,f=(e,t)=>{t.store[e]=t.ghost[e]},j=e=>{const t=parseFloat(e.slice(0,-1));switch(w.last(e)){case"s":return t*1e3;case"m":return t*1e3*60;case"h":return t*1e3*60*60;case"d":return t*1e3*60*60*24;case"w":return t*1e3*60*60*24*7;case"y":return t*1e3*60*60*24*365;default:throw new Error(`time unit ${w.last(e)} is not recognised`)}},D=(e,t)=>(o,r,n,s=Date.now())=>{t.ghost[e].set(o,[r,s+j(n)]),f(e,t)};function u(e,t){const o=Date.now(),r=t.ghost[e];for(const[n,s]of r.entries()){if(!Array.isArray(s)||s.length!==2||typeof s[1]!="number")throw new Error("cacheName does not point to a cumcache store");s[1]>=o&&r.delete(n)}f(e,t)}const x=(e,t)=>new Proxy(t.ghost[e],{get:(o,r)=>t.ghost[e].get(r)?.[0],set:(o,r,n)=>{throw Error("Setting to the cumcache store is not allowed.")},deleteProperty:(o,r)=>t.ghost[e].delete(r)});function g(e="cumcache",t=a.persist){t.ghost[e]||(t.store[e]=new Map);const o=setInterval(()=>u(e,t),5e3);return u(e,t),[()=>clearInterval(o),D(e,t),x(e,t),()=>u(e,t)]}function C(e,t,o=a.persist){const[r,n,s,b]=g(e,o),z=new Proxy(s,{get:(m,i)=>s[i],deleteProperty:(m,i)=>delete s[i],set:(m,i,F)=>(n(i,F,t),!0)});return[r,z,b]}var E=(e,t=!1)=>{const o=n=>typeof n?.type=="string"?o(n.return):n?.type,r=o(v.getReactInstance(e));return t?p.find(n=>n?.default===r):r},A=Object.freeze({__proto__:null,cumcache:g,boundCumcache:C,findByDomNode:E});const h=e=>(e.startsWith(".")&&(e=e.substring(1)),p.findAll(t=>typeof t=="object"&&Object.values(t).some(o=>typeof o=="string"&&o.includes(e))));var O=()=>(window.dk={cctools:A,findClassNameModuleAll:h,findClassNameModule:e=>h(e)[0]},()=>delete window.dk),S=()=>{window.DiscordNative&&DiscordNative.window.setDevtoolsCallbacks(()=>{},()=>{})},M=()=>(Object.assign(window,l.common),()=>{for(const e in l.common)delete window[e]}),P=()=>(a.persist.ghost.otp?Object.assign(window,{injectCSS:c.patcher.injectCSS,after:(e,t,o,r=!0)=>c.patcher.after(e,t,o,r),before:(e,t,o,r=!0)=>c.patcher.before(e,t,o,r),instead:(e,t,o,r=!0)=>c.patcher.instead(e,t,o,r)}):Object.assign(window,c.patcher),()=>{for(const e in c.patcher)delete window[e]}),I=()=>(Object.assign(window,l.webpack),()=>{for(const e in l.webpack)delete window[e]});const T=O();Array.isArray(d.default.persist.ghost.enabledModules)||(d.default.persist.store.enabledModules=["webpack","common","patcher","callbacks"]);const B={webpack:[I,"Exposes webpack modules to window"],common:[M,"Exposes common modules (react etc) to window"],patcher:[P,"Exposes patcher to window"],callbacks:[S,"Disables spam logs on devtools open"]};let y=[];const L=d.default.persist.ghost.enabledModules;for(const e of L)y.push(B[e]?.[0]());var R={onUnload(){_.forEachRight(y,e=>e?.()),T()}};return R})(cumcord.pluginData,cumcord.utils,cumcord.modules.webpack,cumcord.patcher,cumcord.modules,cumcord);
